"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SubscriptionContractPackage = void 0;

/* eslint-disable import/prefer-default-export */
var SubscriptionContractPackage = {
  abi: {
    'ABI version': 0,
    functions: [{
      name: 'constructor',
      inputs: [{
        name: 'wallet',
        type: 'bits256'
      }],
      outputs: []
    }, {
      name: 'subscribe',
      signed: true,
      inputs: [{
        name: 'subscriptionId',
        type: 'bits256'
      }, {
        name: 'pubkey',
        type: 'bits256'
      }, {
        name: 'to',
        type: 'bits256'
      }, {
        name: 'value',
        type: 'duint'
      }, {
        name: 'period',
        type: 'duint'
      }],
      outputs: [{
        name: 'subscriptionHash',
        type: 'bits256'
      }]
    }, {
      name: 'cancel',
      signed: true,
      inputs: [{
        name: 'subscriptionId',
        type: 'bits256'
      }],
      outputs: []
    }, {
      name: 'executeSubscription',
      inputs: [{
        name: 'subscriptionId',
        type: 'bits256'
      }, {
        name: 'signature',
        type: 'bits256'
      }],
      outputs: []
    }, {
      name: 'getSubscription',
      inputs: [{
        name: 'subscriptionId',
        type: 'bits256'
      }],
      outputs: [{
        name: 'to',
        type: 'bits256'
      }, {
        name: 'amount',
        type: 'duint'
      }, {
        name: 'period',
        type: 'duint'
      }, {
        name: 'status',
        type: 'uint8'
      }]
    }]
  },
  imageBase64: 'te6ccgECJwEABFMAAgE0AgEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATL/AIn0BSHBAZN49KCbePQN8rSAIPSh8jPiAwEBwAQCASAGBQAp/+ABw8AEhcfABAdMHAfJ00x8B8AKAgHWFwcBAawIAgEgEQkCASALCgBdvBPJjSGMCAgEwAxYVrkwDrjGxo6f/o9qJoa6ZAgIB6LflU5GZ2omhqGOeLZPaqQCAnUNDAH5tJsMexjAgIBMAMWFa5MA64xsaOn/6PaiaGumQICAegf5VLqQvHoHeVnpg+iAuZC8egd5WemP6IC5ELx6B3lZ6b/ogLiQvHoHeVmY5GfDQGcAysGDVIYQy8GDUCxlg4D0GOeFg4DKwYNUhhDLwYNQLGWDgPQY54WD5YPk6EAWAQm1EOvCQA4B/jGBAQCYAYsK1yYB1xjYAdP/0QGBAgCYAYsK1yYB1xjY0SEg7UTQ10yBAQD0D/KpcCF49A7ys9P/0RP5EPKodCF49A7ys9Mf0QFzIXj0DvKz0x/REqD4IyBYvJ51Inj0DvKz0wfRc7ryfN/Iyx/J0HRYePQWixA4dVh49BZw7UQPAcjQ10yBAQD0DvKpAXIhePQO8rMBcSF49A7yswEk7UTQ10yBAQD0F8jM7UTQ1DHPFsntVIIQJPThVXDIywfLH8+GgM4B03/RlYMGqQwhl4MGoFjLBwHoMc8LB8nQWDAB0//RcFlwEACCjj7++QBTbmRCZHlJbnQB7UdvEG8Y+kJvEsjPhkDKB8v/ydCOF8jPhSDPigBAgQEAz0DOAfoCgGvPQM7J2HD7ANgCAnATEgBVthtFdwxgQEAmAGLCtcmAdcY2NHtRNAg10pxutwBcG2BAQD0FsjMzsntVIAEJtmvYQaAUAfwxgQEAmAGLCtcmAdcY2IEBAJgBiwrXJgHXGNiBAQCYAYsK1yYB1xjY0wDTBliOFXF3A5JVIJzTANMGAyCmBwVZrKDoMd7TANMGWI4VcXcDklUgnNMA0wYDIKYHBVmsoOgx3tFeMCDXSYEBALrytiHXSYEBALrytiLXSYEBALoVAdLytiPBAfJ2JMEB8nZVMHBtePQWcQF49BYhyMt/ydAycgF49BYhyMsfydAycwF49Bb4I8jLH8nQdFh49BaLEAh1WHj0FiD5AALT/9HtRNDXTIEBAPQXyMztRNDUMc8Wye1UyM+GgMv/ydAWAG6ONI4uyHLPQXLPQHLPQHDPCz9wzwsfcc9AXM81AddJpL6Ucc9Azplxz0EByM7JzxTiydhw+wDYAgEgJhgBATAZAgPPwBsaABk0NcoBfpA+kD6AG8EgAWMINMH0x8wAfJ0ifQFgCD0DvKp1wsAjhkgxwLyaNUgxwDyaCH5AQHtRNDXC//5EPKo3oBwBAcAdAgEgIx4CASAgHwAJvBPJjSYCAnUiIQAJtJsMeyAACbUQ68IgAgJwJSQACbYbRXcQAAm2a9hBsAAFNswg'
};
exports.SubscriptionContractPackage = SubscriptionContractPackage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250cmFjdHMvU3Vic2NyaXB0aW9uQ29udHJhY3QuanMiXSwibmFtZXMiOlsiU3Vic2NyaXB0aW9uQ29udHJhY3RQYWNrYWdlIiwiYWJpIiwiZnVuY3Rpb25zIiwibmFtZSIsImlucHV0cyIsInR5cGUiLCJvdXRwdXRzIiwic2lnbmVkIiwiaW1hZ2VCYXNlNjQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTtBQUNPLElBQU1BLDJCQUEyQixHQUFHO0FBQ3ZDQyxFQUFBQSxHQUFHLEVBQUU7QUFDRCxtQkFBZSxDQURkO0FBRURDLElBQUFBLFNBQVMsRUFBRSxDQUFDO0FBQ1JDLE1BQUFBLElBQUksRUFBRSxhQURFO0FBRVJDLE1BQUFBLE1BQU0sRUFBRSxDQUFDO0FBQUVELFFBQUFBLElBQUksRUFBRSxRQUFSO0FBQWtCRSxRQUFBQSxJQUFJLEVBQUU7QUFBeEIsT0FBRCxDQUZBO0FBR1JDLE1BQUFBLE9BQU8sRUFBRTtBQUhELEtBQUQsRUFJUjtBQUNDSCxNQUFBQSxJQUFJLEVBQUUsV0FEUDtBQUVDSSxNQUFBQSxNQUFNLEVBQUUsSUFGVDtBQUdDSCxNQUFBQSxNQUFNLEVBQUUsQ0FDSjtBQUFFRCxRQUFBQSxJQUFJLEVBQUUsZ0JBQVI7QUFBMEJFLFFBQUFBLElBQUksRUFBRTtBQUFoQyxPQURJLEVBRUo7QUFBRUYsUUFBQUEsSUFBSSxFQUFFLFFBQVI7QUFBa0JFLFFBQUFBLElBQUksRUFBRTtBQUF4QixPQUZJLEVBR0o7QUFBRUYsUUFBQUEsSUFBSSxFQUFFLElBQVI7QUFBY0UsUUFBQUEsSUFBSSxFQUFFO0FBQXBCLE9BSEksRUFJSjtBQUFFRixRQUFBQSxJQUFJLEVBQUUsT0FBUjtBQUFpQkUsUUFBQUEsSUFBSSxFQUFFO0FBQXZCLE9BSkksRUFLSjtBQUFFRixRQUFBQSxJQUFJLEVBQUUsUUFBUjtBQUFrQkUsUUFBQUEsSUFBSSxFQUFFO0FBQXhCLE9BTEksQ0FIVDtBQVVDQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQztBQUFFSCxRQUFBQSxJQUFJLEVBQUUsa0JBQVI7QUFBNEJFLFFBQUFBLElBQUksRUFBRTtBQUFsQyxPQUFEO0FBVlYsS0FKUSxFQWVSO0FBQ0NGLE1BQUFBLElBQUksRUFBRSxRQURQO0FBRUNJLE1BQUFBLE1BQU0sRUFBRSxJQUZUO0FBR0NILE1BQUFBLE1BQU0sRUFBRSxDQUFDO0FBQUVELFFBQUFBLElBQUksRUFBRSxnQkFBUjtBQUEwQkUsUUFBQUEsSUFBSSxFQUFFO0FBQWhDLE9BQUQsQ0FIVDtBQUlDQyxNQUFBQSxPQUFPLEVBQUU7QUFKVixLQWZRLEVBb0JSO0FBQ0NILE1BQUFBLElBQUksRUFBRSxxQkFEUDtBQUVDQyxNQUFBQSxNQUFNLEVBQUUsQ0FDSjtBQUFFRCxRQUFBQSxJQUFJLEVBQUUsZ0JBQVI7QUFBMEJFLFFBQUFBLElBQUksRUFBRTtBQUFoQyxPQURJLEVBRUo7QUFBRUYsUUFBQUEsSUFBSSxFQUFFLFdBQVI7QUFBcUJFLFFBQUFBLElBQUksRUFBRTtBQUEzQixPQUZJLENBRlQ7QUFNQ0MsTUFBQUEsT0FBTyxFQUFFO0FBTlYsS0FwQlEsRUEyQlI7QUFDQ0gsTUFBQUEsSUFBSSxFQUFFLGlCQURQO0FBRUNDLE1BQUFBLE1BQU0sRUFBRSxDQUFDO0FBQUVELFFBQUFBLElBQUksRUFBRSxnQkFBUjtBQUEwQkUsUUFBQUEsSUFBSSxFQUFFO0FBQWhDLE9BQUQsQ0FGVDtBQUdDQyxNQUFBQSxPQUFPLEVBQUUsQ0FDTDtBQUFFSCxRQUFBQSxJQUFJLEVBQUUsSUFBUjtBQUFjRSxRQUFBQSxJQUFJLEVBQUU7QUFBcEIsT0FESyxFQUVMO0FBQUVGLFFBQUFBLElBQUksRUFBRSxRQUFSO0FBQWtCRSxRQUFBQSxJQUFJLEVBQUU7QUFBeEIsT0FGSyxFQUdMO0FBQUVGLFFBQUFBLElBQUksRUFBRSxRQUFSO0FBQWtCRSxRQUFBQSxJQUFJLEVBQUU7QUFBeEIsT0FISyxFQUlMO0FBQUVGLFFBQUFBLElBQUksRUFBRSxRQUFSO0FBQWtCRSxRQUFBQSxJQUFJLEVBQUU7QUFBeEIsT0FKSztBQUhWLEtBM0JRO0FBRlYsR0FEa0M7QUF5Q3ZDRyxFQUFBQSxXQUFXLEVBQUU7QUF6QzBCLENBQXBDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cbmV4cG9ydCBjb25zdCBTdWJzY3JpcHRpb25Db250cmFjdFBhY2thZ2UgPSB7XG4gICAgYWJpOiB7XG4gICAgICAgICdBQkkgdmVyc2lvbic6IDAsXG4gICAgICAgIGZ1bmN0aW9uczogW3tcbiAgICAgICAgICAgIG5hbWU6ICdjb25zdHJ1Y3RvcicsXG4gICAgICAgICAgICBpbnB1dHM6IFt7IG5hbWU6ICd3YWxsZXQnLCB0eXBlOiAnYml0czI1NicgfV0sXG4gICAgICAgICAgICBvdXRwdXRzOiBbXSxcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgbmFtZTogJ3N1YnNjcmliZScsXG4gICAgICAgICAgICBzaWduZWQ6IHRydWUsXG4gICAgICAgICAgICBpbnB1dHM6IFtcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdzdWJzY3JpcHRpb25JZCcsIHR5cGU6ICdiaXRzMjU2JyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ3B1YmtleScsIHR5cGU6ICdiaXRzMjU2JyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ3RvJywgdHlwZTogJ2JpdHMyNTYnIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAndmFsdWUnLCB0eXBlOiAnZHVpbnQnIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAncGVyaW9kJywgdHlwZTogJ2R1aW50JyB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG91dHB1dHM6IFt7IG5hbWU6ICdzdWJzY3JpcHRpb25IYXNoJywgdHlwZTogJ2JpdHMyNTYnIH1dLFxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBuYW1lOiAnY2FuY2VsJyxcbiAgICAgICAgICAgIHNpZ25lZDogdHJ1ZSxcbiAgICAgICAgICAgIGlucHV0czogW3sgbmFtZTogJ3N1YnNjcmlwdGlvbklkJywgdHlwZTogJ2JpdHMyNTYnIH1dLFxuICAgICAgICAgICAgb3V0cHV0czogW10sXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIG5hbWU6ICdleGVjdXRlU3Vic2NyaXB0aW9uJyxcbiAgICAgICAgICAgIGlucHV0czogW1xuICAgICAgICAgICAgICAgIHsgbmFtZTogJ3N1YnNjcmlwdGlvbklkJywgdHlwZTogJ2JpdHMyNTYnIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnc2lnbmF0dXJlJywgdHlwZTogJ2JpdHMyNTYnIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgb3V0cHV0czogW10sXG4gICAgICAgIH0sIHtcbiAgICAgICAgICAgIG5hbWU6ICdnZXRTdWJzY3JpcHRpb24nLFxuICAgICAgICAgICAgaW5wdXRzOiBbeyBuYW1lOiAnc3Vic2NyaXB0aW9uSWQnLCB0eXBlOiAnYml0czI1NicgfV0sXG4gICAgICAgICAgICBvdXRwdXRzOiBbXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAndG8nLCB0eXBlOiAnYml0czI1NicgfSxcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdhbW91bnQnLCB0eXBlOiAnZHVpbnQnIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAncGVyaW9kJywgdHlwZTogJ2R1aW50JyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ3N0YXR1cycsIHR5cGU6ICd1aW50OCcgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH1dLFxuICAgIH0sXG4gICAgaW1hZ2VCYXNlNjQ6ICd0ZTZjY2dFQ0p3RUFCRk1BQWdFMEFnRUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFUTC9BSW4wQlNIQkFaTjQ5S0NiZVBRTjhyU0FJUFNoOGpQaUF3RUJ3QVFDQVNBR0JRQXAvK0FCdzhBRWhjZkFCQWRNSEFmSjAweDhCOEFLQWdIV0Z3Y0JBYXdJQWdFZ0VRa0NBU0FMQ2dCZHZCUEpqU0dNQ0FnRXdBeFlWcmt3RHJqR3hvNmYvbzlxSm9hNlpBZ0lCNkxmbFU1R1oyb21ocUdPZUxaUGFxUUNBblVOREFINXRKc01leGpBZ0lCTUFNV0ZhNU1BNjR4c2FPbi82UGFpYUd1bVFJQ0FlZ2Y1VkxxUXZIb0hlVm5wZytpQXVaQzhlZ2Q1V2VtUDZJQzVFTHg2QjNsWjZiL29nTGlRdkhvSGVWbVk1R2ZEUUdjQXlzR0RWSVlReThHRFVDeGxnNEQwR09lRmc0REt3WU5VaGhETHdZTlFMR1dEZ1BRWTU0V0Q1WVBrNkVBV0FRbTFFT3ZDUUE0Qi9qR0JBUUNZQVlzSzF5WUIxeGpZQWRQLzBRR0JBZ0NZQVlzSzF5WUIxeGpZMFNFZzdVVFExMHlCQVFEMEQvS3BjQ0Y0OUE3eXM5UC8wUlA1RVBLb2RDRjQ5QTd5czlNZjBRRnpJWGowRHZLejB4L1JFcUQ0SXlCWXZKNTFJbmowRHZLejB3ZlJjN3J5Zk4vSXl4L0owSFJZZVBRV2l4QTRkVmg0OUJadzdVUVBBY2pRMTB5QkFRRDBEdktwQVhJaGVQUU84ck1CY1NGNDlBN3lzd0VrN1VUUTEweUJBUUQwRjhqTTdVVFExREhQRnNudFZJSVFKUFRoVlhESXl3ZkxIOCtHZ000QjAzL1JsWU1HcVF3aGw0TUdvRmpMQndIb01jOExCOG5RV0RBQjAvL1JjRmx3RUFDQ2pqNysrUUJUYm1SQ1pIbEpiblFCN1VkdkVHOFkra0p2RXNqUGhrREtCOHYveWRDT0Y4alBoU0RQaWdCQWdRRUF6MERPQWZvQ2dHdlBRTTdKMkhEN0FOZ0NBbkFURWdCVnRodEZkd3hnUUVBbUFHTEN0Y21BZGNZMk5IdFJOQWcxMHB4dXR3QmNHMkJBUUQwRnNqTXpzbnRWSUFFSnRtdllRYUFVQWZ3eGdRRUFtQUdMQ3RjbUFkY1kySUVCQUpnQml3clhKZ0hYR05pQkFRQ1lBWXNLMXlZQjF4alkwd0RUQmxpT0ZYRjNBNUpWSUp6VEFOTUdBeUNtQndWWnJLRG9NZDdUQU5NR1dJNFZjWGNEa2xVZ25OTUEwd1lESUtZSEJWbXNvT2d4M3RGZU1DRFhTWUVCQUxyeXRpSFhTWUVCQUxyeXRpTFhTWUVCQUxvVkFkTHl0aVBCQWZKMkpNRUI4blpWTUhCdGVQUVdjUUY0OUJZaHlNdC95ZEF5Y2dGNDlCWWh5TXNmeWRBeWN3RjQ5QmI0SThqTEg4blFkRmg0OUJhTEVBaDFXSGowRmlENUFBTFQvOUh0Uk5EWFRJRUJBUFFYeU16dFJORFVNYzhXeWUxVXlNK0dnTXYveWRBV0FHNk9OSTR1eUhMUFFYTFBRSExQUUhEUEN6OXd6d3NmY2M5QVhNODFBZGRKcEw2VWNjOUF6cGx4ejBFQnlNN0p6eFRpeWRodyt3RFlBZ0VnSmhnQkFUQVpBZ1BQd0JzYUFCazBOY29CZnBBK2tENkFHOEVnQVdNSU5NSDB4OHdBZkowaWZRRmdDRDBEdktwMXdzQWpoa2d4d0x5YU5VZ3h3RHlhQ0g1QVFIdFJORFhDLy81RVBLbzNvQndCQWNBZEFnRWdJeDRDQVNBZ0h3QUp2QlBKalNZQ0FuVWlJUUFKdEpzTWV5QUFDYlVRNjhJZ0FnSndKU1FBQ2JZYlJYY1FBQW0yYTloQnNBQUZOc3dnJ1xufTtcblxuZXhwb3J0IHR5cGUgU3Vic2NyaXB0aW9uQ29udHJhY3RDb25zdHJ1Y3RvclBhcmFtcyA9IHtcbiAgICB3YWxsZXQ6IHN0cmluZyxcbn07XG4iXX0=